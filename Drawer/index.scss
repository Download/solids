//
// Copyright 2018 Stijn de Witt. Some rights reserved.
// Licensed under the MIT Open Source license. 
// https://opensource.org/licenses/MIT
// See LICENSE for details.
//
// Based on code copyright 2018 Google Inc. All Rights Reserved.
// Licensed under the Apache License, Version 2.0.
// http://www.apache.org/licenses/LICENSE-2.0
// See LICENSE-MDC for details.
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under these licenses is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the licenses for the specific language governing permissions and
// limitations under these licenses.
// 

@import "../rtl/mixins";
@import "../animation/functions";
@import "../elevation/mixins";
@import "../appbar/variables";

@import "./slidable/mixins";
@import "./slidable/variables";
@import "./mixins";
@import "./variables";

.solid_drawer {
	@include mdc-drawer-base_;
	@include mdc-drawer-ink-color($drawer-ink-color);
	@include mdc-drawer-fill-color($drawer-fill-color);

	float: left;
	@include mdc-rtl {
		float: right;
	}
	height: 100%;
	z-index: 2;

	&~ main {
		display: table-cell;
	}

	>div {
		padding-bottom: 99999px;
		margin-bottom: -99999px;
		overflow: hidden;

		>nav {
			width: $drawer-width;
		}

		&:after {
			content:'';
			display: block;
			height: 1px;
		}
	}

	.drawer_button_persistent,
	.drawer_button_temporary {
		position: absolute;
		top: 0;
		cursor: pointer;
		z-index: 1;
		user-select: none;
		left: 0;
		@include mdc-rtl {
			right: 0;
		}
			
		>span {
			@include appbar-icon_;
			@include appbar-fill-color-accessible(primary);
			margin: $appbar-section-vertical-padding $appbar-section-horizontal-padding;
		}
	}

	.drawer_toggle_persistent,
	.drawer_toggle_temporary {
		display:none;

		&:checked ~ div {
			width: $drawer-width;
		}
	}

	// right-hand side drawer (in ltr)
	&.drawer_end {
		float: right;
		@include mdc-rtl {
			float: left;
		}
		.drawer_button_persistent,
		.drawer_button_temporary {
			right: 0;
			left: initial;
			@include mdc-rtl {
				left: 0;
				right: initial;
			}
		}
	}

	// PERMANENT
	&.drawer_permanent {
		display: inline-flex;
	
		>div {
			@include mdc-rtl-reflexive-box(border, right, 1px solid #e4e4e4);
			box-sizing: border-box;
			overflow: hidden;
			width: $drawer-width;
			display: inline-flex;
			flex-direction: column;
			flex: 0 0 auto;
			vertical-align: top;
		}

		&.drawer_floating {
			>div {
				@include mdc-rtl-reflexive-box(border, right, none);
				background: none;
			}
		}

		// right-hand side drawer (in ltr)
		&.drawer_end {
			>div {
				@include mdc-rtl-reflexive-box(border, left, 1px solid #e4e4e4);
			}
	
			&.drawer_floating {
				>div {
					@include mdc-rtl-reflexive-box(border, left, none);
				}
			}
		}
	}
	
	// PERSISTENT
	&.drawer_persistent {
		&.drawer_fixed {
			position: sticky;
			top: $appbar-row-height + 16px;
			.drawer_button_persistent {
					// top: -($appbar-row-height + 16px);
			}		
		}

		>div {
			width: 0;
			will-change: width;
			transition: width 250ms;

			>nav {
				width: $drawer-width;
				will-change: transform;
				transform: translateX(-$drawer-width);
				@include mdc-rtl {
					transform: translateX($drawer-width);
				}
				transition: transform 250ms;
			}
		}
		
		.drawer_toggle_persistent {
			&:checked ~ div {
				@include mdc-rtl-reflexive-box(border, right, 1px solid #e4e4e4);
				
				// @include mdc-rtl-reflexive-box(border, right, 1px solid #e4e4e4);
				// @include mdc-rtl-reflexive-position(left, 0);
				//				@include mdc-slideable-drawer;
				height: 100%;
				box-sizing: border-box;
				overflow: hidden;
				display: flex;
				flex-direction: column;
				touch-action: none;

				>nav {
					transform: translateX(0);
				}
			}
		}

		&.drawer_floating {
			.drawer_toggle_persistent {
				&:checked ~ div {
					@include mdc-rtl-reflexive-box(border, right, none);
				}
			}
		}

		// right-hand side drawer (in ltr)
		&.drawer_end {
			>div {
				transition: width 250ms;
				>nav {
					transform: translateX($drawer-width);
					@include mdc-rtl {
						transform: translateX(-$drawer-width);
					}
				}
			}
			.drawer_toggle_persistent {
				&:checked ~ div {
					@include mdc-rtl-reflexive-box(border, left, 1px solid #e4e4e4);
				}
			}

			&.drawer_floating {
				.drawer_toggle_persistent {
					&:checked ~ div {
						@include mdc-rtl-reflexive-box(border, left, none);
					}
				}
			}
		}
	}

	// TEMPORARY
	&.drawer_temporary {
		position: absolute;

		.drawer_button_temporary {
			background: rgba(0,0,0,0);
			will-change: background;
			transition: background 250ms;
			z-index: 2;
		}

		>div {
			width: $drawer-width;
			position: fixed;
			top: 0;
			bottom: 0;
			@include mdc-rtl-reflexive-position(left, 0);
			@include mdc-drawer-fill-color($drawer-fill-color);
			@include mdc-drawer-ink-color($drawer-ink-color);
			@include mdc-rtl-reflexive-box(border, right, 1px solid #e4e4e4);
			overflow: hidden;
			display: flex;
			flex-direction: column;
			z-index: 3;
			will-change: transform;
			transition: transform 250ms;
			transform: translateX(-$drawer-width);
			@include mdc-rtl {
				transform: translateX($drawer-width);
			}
		}

		&.drawer_end {
			>div {
				@include mdc-rtl-reflexive-position(right, 0);
				@include mdc-rtl-reflexive-box(border, left, 1px solid #e4e4e4);
				transform: translateX($drawer-width);
				@include mdc-rtl {
					transform: translateX(-$drawer-width);
				}
			}
		}

		.drawer_toggle_temporary {
			&:checked {
				&~.drawer_button_temporary {
					position: fixed;
					left: 0;
					right: 0;
					bottom: 0;
					background: rgba(0,0,0,0.45);
					cursor: default;
					>span {
						display: none;
					}
				}
				&~ div {
								//				@include mdc-slideable-drawer;
					transform: translateX(0);
					box-shadow: -10px 0px 100px rgba(0, 0, 0, 0.35);
					@include mdc-rtl {
						box-shadow: 10px 0px 100px rgba(0, 0, 0, 0.35);
					}
				}
			}
		}

		.drawer_button_temporary {
				top: -($appbar-row-height + 16px);
		}		
	}

/*
		.drawer_toggle_persistent {
			&~ .drawer_button_persistent {
				background: rgba(0,255,0, 0.3);
			}

			&~nav {
				background: rgba(0,0,255, 0.3);
			}

			&:checked {
				&~ .drawer_button_persistent {
					background: rgba(0,255,0, 0.7);
				}

				&~ nav {
					background: rgba(0,0,255, 0.7);
					width: $drawer-width;
				}
				@include mdc-rtl {
					&~nav {
						@include mdc-slideable-drawer-open;
					}
				}
			}
		}

		&.mdc-drawer--animating {
			>nav {
				transition: $mdc-slidable-drawer-transition-close;
			}

			&.mdc-drawer--open {
				>nav {
					transition: $mdc-slidable-drawer-transition-open;
				}
			}
		}
	}


	// TEMPORARY
	&.drawer_temporary {
		@include mdc-drawer-scrim-color($drawer-scrim-color, $drawer-scrim-opacity);
		box-sizing: border-box;
		overflow: hidden;
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		pointer-events: none;
		contain: strict;
		z-index: 5;
	
		// Shaded background
		&::before {
			display: block;
			position: absolute;
			top: 0;
			left: 0;
			box-sizing: border-box;
			width: 100%;
			height: 100%;
			opacity: 0;
			opacity: var(--mdc-temporary-drawer-opacity, 0);
			content: "";
			will-change: opacity;
		}
	
		>nav {
			@include mdc-elevation(16);
			@include mdc-rtl-reflexive-position(left, 0);
			@include mdc-slideable-drawer;
			display: flex;
			position: absolute;
			flex-direction: column;
			box-sizing: border-box;
			width: calc(100% - 56px);
			max-width: 280px;
			overflow: hidden;
			touch-action: none;
	
			// TODO(sgomes): replace with global breakpoints when we have them
			@media (min-width: 600px) {
				width: calc(100% - 64px);
				max-width: 320px;
			}
		}
	
		.drawer_content {
			flex-grow: 1;
			box-sizing: border-box;
			margin: 0;
			overflow-x: hidden;
			overflow-y: auto;
			-webkit-overflow-scrolling: touch;
			touch-action: pan-y;
		}
	
		>footer {
			@include mdc-elevation(2);
			flex-shrink: 0;
		}
	
		&.mdc-drawer--open {
			pointer-events: auto;
	
			&::before {
				opacity: 1;
				opacity: var(--mdc-temporary-drawer-opacity, 1);
			}
	
			>nav {
				@include mdc-slideable-drawer-open;
			}
	
			// Specificity fix to ensure that mdc-drawer is not translated off-screen within an RTL context
			@include mdc-rtl {
				>nav {
					@include mdc-slideable-drawer-open;
				}
			}
		}
	
		&.mdc-drawer--animating {
			&::before {
				transition: mdc-animation-enter(opacity, .3s);
			}
	
			>nav {
				transition: $mdc-slidable-drawer-transition-close;
			}
	
			&.mdc-drawer--open {
				>nav {
					transition: $mdc-slidable-drawer-transition-open;
				}
			}
		}
	}
	
	.mdc-drawer-scroll-lock {
		overflow: hidden;
	}


	.drawer_button_persistent,
	.drawer_button_temporary {
		width: $appbar-icon-size + 2*$appbar-icon-padding;
		height: $appbar-icon-size + 2*$appbar-icon-padding;
		margin: 0;
		padding: 0;
		z-index: 1;
	
		>span {
			width: $appbar-icon-size + 2*$appbar-icon-padding;
			height: $appbar-icon-size + 2*$appbar-icon-padding;
			padding: $appbar-icon-padding;
			margin: $appbar-section-vertical-padding $appbar-section-horizontal-padding;
			z-index: 1;
			color: white;
		}
	}
*/
}


.appbar_dense {
	&~ .solid_drawer {
		.drawer_button_persistent,
		.drawer_button_temporary {
			>span {
				margin: 0 $appbar-section-horizontal-padding;
			}
		}
		&.drawer_fixed {
			top: $appbar-dense-row-height + 16px;
			.drawer_button_persistent,
			.drawer_button_temporary {
				top: -($appbar-dense-row-height + 16px);
			}			
		}
	}

	&.appbar_prominent ~ .drawer_fixed {
		top: $appbar-dense-row-height*2 + 16px;
		.drawer_button_persistent,
		.drawer_button_temporary {
			top: -($appbar-dense-row-height*2 + 16px);
		}
	}
}

.appbar_prominent {
	&~ .drawer_fixed {
		top: $appbar-prominent-row-height + 16px;
		.drawer_button_persistent,
		.drawer_button_temporary {
			top: -($appbar-prominent-row-height + 16px);
		}			
	}
}

.appbar_fixed {
	&~ .solid_drawer {
		.drawer_button_persistent,
		.drawer_button_temporary {
			position: fixed;
			top: 0;
			/*
			width: 0;
			height: 0;

			>span {
				position: absolute;
				top: -($appbar-row-height + 16px);
			}
			*/
		}
	}
	&.appbar_prominent ~ .solid_drawer {
		.drawer_button_persistent,
		.drawer_button_temporary {
			top: $appbar-prominent-row-height + 16px;
			>span {
				top: -($appbar-prominent-row-height + 16px);
			}
		}
	}
}


/*
	.drawer_toggle_temporary:checked {
		&~ .drawer_button_temporary {
			top: 0;
			>span {
				top: 0;
			}
		}
	}

	&.appbar_prominent ~ div .solid_drawer {
		.drawer_button_persistent,
		.drawer_button_temporary {
			top: $appbar-prominent-row-height + 16px;
			>span {
				top: -($appbar-prominent-row-height + 16px);
			}
		}
	}


	&.appbar_dense.appbar_prominent ~ div .solid_drawer {
		.drawer_button_persistent,
		.drawer_button_temporary {
			top: $appbar-dense-row-height*2 + 16px;
			>span {
				top: -($appbar-dense-row-height*2 + 16px);
			}
		}
	}
}
*/